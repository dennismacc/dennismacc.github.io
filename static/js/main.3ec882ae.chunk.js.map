{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Nav/index.js","components/Header/index.js","components/About/index.js","components/ProjectContainer/index.js","components/Projects/index.js","components/Skills/index.js","components/Contact/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","linkedin","github","projects","description","stack","sourceCode","livePreview","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","title","Nav","About","role","resume","social","ProjectContainer","project","map","item","uniqid","Projects","id","Skills","skill","Contact","Footer","App","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gWAGMA,EAAeC,0BAEfC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,EAAkCC,mBAAS,SAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACR,IAAMC,EAAiBC,OAAOC,WAAW,gCACzCJ,EAAaE,EAAeG,QAAU,OAAS,SAC/CH,EAAeI,iBAAiB,UAAU,SAACC,GACzCP,EAAaO,EAAEF,QAAU,OAAS,QACnC,GACF,GAAE,IAQH,OACE,cAACX,EAAac,SAAd,CAAuBC,MAAO,CAAC,CAAEV,YAAWW,YAP1B,WAClB,IAAMC,EAAqB,SAAdZ,EAAuB,QAAU,OAC9Ca,aAAaC,QAAQ,YAAaF,GAClCX,EAAaW,EACd,IAGC,SACGd,GAGN,EC3BKiB,EACQ,+BADRA,EAEK,MAGHC,EACE,SADFA,EAEE,2BAFFA,EAIF,6ZAJEA,EAKI,qFALJA,EAMI,CACNC,SAAU,0CACVC,OAAQ,iCAINC,EAAW,CACf,CACEP,KAAM,SACNQ,YACE,mIACFC,MAAO,CAAC,4BAA6B,UAAW,SAAU,MAAO,QAAS,UAAW,WAAY,eACjGC,WAAY,uCACZC,YAAa,iCAEf,CACEX,KAAM,UACNQ,YACE,wGACFC,MAAO,CAAC,aAAc,aAAc,YAAa,iBACjDC,WAAY,0CACZC,YAAa,8BAEf,CACEX,KAAM,YACNQ,YACE,8IACFC,MAAO,CAAC,MAAO,gBAAiB,YAAa,mBAC7CC,WAAY,0CACZC,YAAa,uCAEf,CACEX,KAAK,mBACLQ,YACE,4FACFC,MAAO,CAAC,OAAQ,MAAO,cACvBC,WAAY,oDACZC,YAAa,uDAEf,CACEX,KAAM,sBACNQ,YACE,sHACFC,MAAO,CAAC,UAAW,aAAc,QAAS,aAC1CC,WAAY,oDACZC,YAAa,wFAEf,CACEX,KAAM,mBACNQ,YAAY,0GAEZC,MAAO,CAAC,UAAW,QAAS,YAC5BC,WAAY,iDACZC,YAAa,uFAIXC,EAAS,CACb,OACA,MACA,aACA,SACA,oBACA,YACA,QACA,cACA,cACA,OACA,UACA,aACA,kBACA,mBACA,UACA,OACA,MACA,MACA,iBACA,QACA,QACA,SAiBIC,EACG,6B,oECjBIC,G,MAlFA,WACb,MAAqCC,qBAAWhC,GAAhD,sBAASK,EAAT,EAASA,UAAWW,EAApB,EAAoBA,YACpB,EAAsCZ,oBAAS,GAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAEMC,EAAgB,kBAAMD,GAAgBD,EAAtB,EAEtB,OACE,sBAAKG,UAAU,aAAf,UACE,qBACEC,MAAO,CAAEC,QAASL,EAAc,OAAS,MACzCG,UAAU,YAFZ,UAIGZ,EAASe,OACR,oBAAIH,UAAU,iBAAd,SACE,mBACEI,KAAK,YACLC,QAASN,EACTC,UAAU,iBAHZ,wBAQA,KAEHP,EAAOU,OACN,oBAAIH,UAAU,iBAAd,SACE,mBACEI,KAAK,UACLC,QAASN,EACTC,UAAU,iBAHZ,sBAQA,KAcHN,EACC,oBAAIM,UAAU,iBAAd,SACE,mBACEI,KAAK,WACLC,QAASN,EACTC,UAAU,iBAHZ,uBAQA,QAGN,wBACEM,KAAK,SACLD,QAASzB,EACToB,UAAU,2BACV,aAAW,eAJb,SAMiB,SAAd/B,EAAuB,cAAC,IAAD,IAAyB,cAAC,IAAD,MAGnD,wBACEqC,KAAK,SACLD,QAASN,EACTC,UAAU,+BACV,aAAW,oBAJb,SAMGH,EAAc,cAAC,IAAD,IAAgB,cAAC,IAAD,QAItC,GClEcU,G,MAnBA,WACb,IAAQC,EAAoBxB,EAAVyB,EAAUzB,EAE5B,OACE,yBAAQgB,UAAU,gBAAlB,UACE,6BACGQ,EACC,mBAAGJ,KAAMI,EAAUR,UAAU,OAA7B,SACGS,IAGHA,IAGJ,cAACC,EAAD,MAGL,G,kCC+CcC,G,MA9DD,WACZ,IAAQ9B,EAA4CI,EAAtC2B,EAAsC3B,EAAhCI,EAAgCJ,EAAnB4B,EAAmB5B,EAAX6B,EAAW7B,EAEpD,OACE,sBAAKe,UAAU,eAAf,UACGnB,GACC,iDACiB,uBAAMmB,UAAU,cAAhB,UAA+BnB,EAA/B,UAIlB+B,GAAQ,qBAAIZ,UAAU,cAAd,mBAAmCY,EAAnC,OACT,mBAAGZ,UAAU,cAAb,SAA4BX,GAAeA,IAE3C,qBAAKW,UAAU,wBAAf,SAEGc,GACC,qCACGA,EAAO3B,QACN,mBACAiB,KAAMU,EAAO3B,OACb,aAAW,SACXa,UAAU,kBAHV,SAKE,cAAC,IAAD,MAIHa,GACC,mBAAGT,KAAMS,EAAT,SACE,sBAAMP,KAAK,SAASN,UAAU,mBAA9B,sBAgBHc,EAAO5B,UACN,mBACEkB,KAAMU,EAAO5B,SACb,aAAW,WACXc,UAAU,kBAHZ,SAKE,cAAC,IAAD,aAQf,G,iCCxBce,G,MArCU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACvB,sBAAKhB,UAAU,UAAf,UACE,6BAAKgB,EAAQnC,OAEb,mBAAGmB,UAAU,uBAAb,SAAqCgB,EAAQ3B,cAC5C2B,EAAQ1B,OACP,oBAAIU,UAAU,iBAAd,SACGgB,EAAQ1B,MAAM2B,KAAI,SAACC,GAAD,OACjB,oBAAmBlB,UAAU,sBAA7B,SACGkB,GADMC,MADQ,MAQtBH,EAAQzB,YACP,mBACEa,KAAMY,EAAQzB,WACd,aAAW,cACXS,UAAU,kBAHZ,SAKE,cAAC,IAAD,MAIHgB,EAAQxB,aACP,mBACEY,KAAMY,EAAQxB,YACd,aAAW,eACXQ,UAAU,kBAHZ,SAKE,cAAC,IAAD,QA/BiB,GCgBVoB,G,MAhBE,WACf,OAAKhC,EAASe,OAGZ,0BAASkB,GAAG,WAAWrB,UAAU,mBAAjC,UACE,oBAAIA,UAAU,iBAAd,sBAEA,qBAAKA,UAAU,iBAAf,SACGZ,EAAS6B,KAAI,SAACD,GAAD,OACZ,cAAC,EAAD,CAAiCA,QAASA,GAAnBG,MADX,SAPS,IAa9B,GCEcG,G,MAjBA,WACb,OAAK7B,EAAOU,OAGV,0BAASH,UAAU,iBAAiBqB,GAAG,SAAvC,UACE,oBAAIrB,UAAU,iBAAd,oBACA,oBAAIA,UAAU,eAAd,SACGP,EAAOwB,KAAI,SAACM,GAAD,OACV,oBAAmBvB,UAAU,mCAA7B,SACGuB,GADMJ,MADC,SANS,IAc5B,GCDcK,G,MAfC,WACd,OAAK9B,EAGH,0BAASM,UAAU,yBAAyBqB,GAAG,UAA/C,UACE,oBAAIrB,UAAU,iBAAd,qBACA,mBAAGI,KAAI,iBAAYV,GAAnB,SACE,sBAAMY,KAAK,SAASN,UAAU,mBAA9B,2BANqB,IAY5B,GCHcyB,G,MAXA,kBACb,wBAAQzB,UAAU,SAAlB,SACE,mBACEI,KAAK,qDACLJ,UAAU,oBAFZ,0CAFW,GC4BA0B,G,MAnBH,WACV,MAAwB9B,qBAAWhC,GAA1BK,EAAT,oBAASA,UAET,OACE,sBAAKoD,GAAG,MAAMrB,UAAS,UAAK/B,EAAL,QAAvB,UACE,cAAC,EAAD,IAEA,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,EAAD,OAEF,cAAC,EAAD,MAGL,G,MChBmB0D,QACW,cAA7BtD,OAAOuD,SAASC,UAEe,UAA7BxD,OAAOuD,SAASC,UAEhBxD,OAAOuD,SAASC,SAASC,MAAM,2DCXnCC,iBACE,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,YACd,IACAC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,QACrB,G","file":"static/js/main.3ec882ae.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }","const header = {\n    homepage: 'https://dennismacc.github.io',\n    title: 'DM.',\n  }\n  \n  const about = {\n    name: 'Dennis',\n    role: 'Full-Stack Web Developer',\n    description:\n      'My goal is to provide a user-focused, quality-driven, and more accessible web and mobile experience for all users. This is accomplished by communicating with clients and team members to build responsive and intuitive applications, from ideation to deployment. I strive to create a positive user experience for all users by providing accessibility to everyone through universal, inclusive, and equitable design.',\n    resume: 'https://drive.google.com/file/d/1MvQoBrgKSpfBcb1Ht8_nkeuJ_DLsop6m/view?usp=sharing',\n    social: {\n      linkedin: 'https://www.linkedin.com/in/dennismacc/',\n      github: 'https://github.com/dennismacc',\n    },\n  }\n  \n  const projects = [\n    {\n      name: 'Groove',\n      description:\n        'Groove is a simple productivity app specifically designed to keep you focusing on the tasks that you are doing and nothing else.',\n      stack: ['JavaScript (React & Node)', 'GraphQL', 'Apollo', 'JWT', 'Jotai', 'MongoDB', 'Mongoose', 'TailwindCSS'],\n      sourceCode: 'https://github.com/dennismacc/Groove',\n      livePreview: 'https://groovey.herokuapp.com',\n    },\n    {\n      name: 'DÜDL',\n      description:\n        'DÜDL is a multiplayer drawing and guessing game that can be played with friends anytime, anywhere!',\n      stack: ['JavaScript', 'Express.js', 'Socket.io', 'Handlebars.js'],\n      sourceCode: 'https://github.com/dennismacc/DUDL-Game',\n      livePreview: 'https://dudl.herokuapp.com',\n    },\n    {\n      name: 'Tech Blog',\n      description:\n        'CMS-style blog sites that publish articles, blog posts, and other content. The app follows the MVC paradigm in its architectural structure.',\n      stack: ['MVC', 'Handlebars.js', 'Sequelize', 'Express-Session'],\n      sourceCode: 'https://github.com/dennismacc/Tech-Blog',\n      livePreview: 'https://tech-blog-dm.herokuapp.com/',\n    },\n    {\n      name: `What's Streamin?`,\n      description:\n        'A simple web app that randomly generates a movie or TV show to watch based on user input.',\n      stack: ['HTML', 'CSS', 'JavaScript'],\n      sourceCode: 'https://github.com/dennismacc/Stream_Availability',\n      livePreview: 'https://swagnarok630.github.io/Stream_Availability/',\n    },\n    {\n      name: 'E-Commerce Back End',\n      description:\n        'Back end for a sample internet retail company that uses the latest technologies to make them a stronger competitor.',\n      stack: ['Node.js', 'Express.js', 'MySQL', 'Sequelize'],\n      sourceCode: 'https://github.com/dennismacc/E-Commerce-Back-End',\n      livePreview: 'https://drive.google.com/drive/folders/1ET1LksRO79usM_65eSCR5TkwCVNBgWhe?usp=sharing',\n    },\n    {\n      name: 'Employee Tracker',\n      description:\n        `Command-line application that allows the user to quickly view and manage a company's employee database.`,\n      stack: ['Node.js', 'MySQL', 'Inquirer'],\n      sourceCode: 'https://github.com/dennismacc/Employee-Tracker',\n      livePreview: 'https://drive.google.com/file/d/1CHFgz_nYEHIf8Z0UoO3jTQoxj2WyC8a2/view?usp=sharing',\n    },\n  ]\n  \n  const skills = [\n    'HTML',\n    'CSS',\n    'JavaScript',\n    'jQuery',\n    'Responsive Design',\n    'Bootstrap',\n    'React',    \n    'Material UI',\n    'TailwindCSS',\n    'APIs',\n    'Node.js',\n    'Express.js',\n    'MySQL/Sequelize',\n    'MongoDB/Mongoose',\n    'GraphQL',\n    'REST',\n    'MVC',\n    'Git',\n    'ADA Compliance',\n    'Agile',\n    'UI/UX',\n    'Figma',\n  ]\n\n  const certificates = [\n    {\n      name: 'Full-Stack Web Development',\n      description:\n        'A 24-week intensive program that teaches the skills needed to become a full-stack web developer.',\n      link: 'https://bootcamp.umn.edu/coding/',\n    },\n    {\n      name: 'React.js',\n      link: 'https://www.credly.com/badges/6354981e-c31b-4ea7-98f6-89e88ac6e2cd/public_url'\n    }\n  ]\n\n  \n  const contact = {\n    email: 'dennis.maccarthy@gmail.com',\n  }\n  \n  export { header, about, projects, skills, certificates, contact }","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, certificates, contact } from '../../portfolio'\nimport './style.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {/* {certificates.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#certificates'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Certificates\n            </a>\n          </li>\n        ) : null} */}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar","import { header } from '../../portfolio'\nimport Navbar from '../Nav'\nimport './style.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\n// import DownloadIcon from '@mui/icons-material/Download'\nimport { about } from '../../portfolio'\nimport './style.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, my name is <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>I'm a {role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n              href={social.github}\n              aria-label='github'\n              className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n\n            {resume && (\n              <a href={resume}>\n                <span type='button' className='btn btn--outline'>\n                  resume\n                </span>\n              </a>\n            )}\n\n            {/* {resume && (\n              <a \n              href={resume}\n              aria-label='resume'\n              className='link link--icon'\n              >\n                <DownloadIcon />\n              </a>\n            )} */}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin}\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <LinkedInIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './style.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer'\nimport './style.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './style.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills","import { contact } from '../../portfolio'\nimport './style.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact","import './style.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://github.com/dennismacc/dennismacc.github.io'\n      className='link footer__link'\n    >\n      Created By Dennis Maccarthy\n    </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header'\nimport About from './components/About'\nimport Projects from './components/Projects'\nimport Skills from './components/Skills'\nimport Contact from './components/Contact'\nimport Footer from './components/Footer'\n// import Certificates from './components/Certificates'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        {/* <Certificates /> */}\n        <Contact />\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}